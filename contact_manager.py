# Модуль работы с контактами

"""
Функция подсчета "буквенного расстояния"

str1, str2 - строки для подсчета расстояния

Буквенным расстоянием назовем сумму модулей разностей кодов символов строк в кодировке
Если сравнивниваются строки разной длины, то в вычисленной длине прибавляется величина равная
10 * <разница_расстояний> к вычисленному расстоянию

Пример:
str1 = "cat"
str2 = "fish"

ord("c") == 99
ord("f") == 102

Расстояние для первой буквы == 3
Итоговое расстояние - 3

ord("a") == 97
ord("i") == 105

Расстояние для второй буквы == 8
Итоговое расстояние - 11

ord("t") == 116
ord("s") == 115

Расстояние для третьей буквы == 1
Итоговое расстояние - 12

Разница длин слов == 1 => Итоговое расстояние - 12 + 10 = 22
"""
def get_alphabet_distance(str1, str2):
	pass

"""
Функция поиска контактов по ФИО

data - словарь контактов
	Ключи - телефоны контактов
	Значения - остальные значения контактов
	Пример:
	{
		"+12342131": ["Ivanov", "Ivan", "Ivanovich", "", "Kazan", "Baumana str., 666 building, 42 flat"],
		"+01010101": ["Petrov", "Petr", "Petrovich", "", "Kazan", "Baumana str., 666 building, 42 flat"]
	}

fio - строка, искомый ФИО в контактах

Необходимо вернуть список контактов, отсортированный по буквенному расстоянию искомого ФИО и ФИО контакта
"""
def get_most_familiar_contacts(data, fio):
	pass

"""
Функция получения разбивки по городам

data - словарь контактов

Необходимо вернуть словарь
Ключи - названия городов из контактов в data
Значения - контакты для соответствующих городов
"""
def get_city_clusters(data):
	pass

"""
Функция удаления контакта по номеру

data - словарь контактов
phone - строка, номер для удаления

Необходимо вернуть словарь контактов, в котором нет ключа phone
"""
def delete_contact(data, phone):
	pass

"""
Функция добавления контакта

kwargs - словарь аргументов
Ключи словаря:
- data - словарь cуществующих контактов
- phone - номер добавляемого контакта
- first_name - имя добавляемого контакта
- last_name - имя добавляемого контакта
И т.д

Пример использования
data = dict()
data = add_contact(data=data, phone="+1231231", first_name="Иван", email="kek@gmail.com")

Необходимо вернуть словарь контактов, в котором добавлен переданный контакт
"""
def add_contact(**kwargs):
	pass

"""
Функция добавления контакта

kwargs - словарь аргументов
Ключи аналогичны add_contact

Пример использования:
data = dict()
data = edit_contact(data=data, phone="+1231231", first_name="Иван", email="kek@gmail.com")

Необходимо вернуть словарь контактов, в котором изменена информация о переданном контакте
"""
def edit_contact(**kwargs):
	pass

"""
Функция получения списка контактов, отсортированных по некоторой колонке контактов

data - словарь контактов
by - строка, некоторая колонка контактов (например "first_name", "email", "patronymic" и т.д.)

Необходимо вернуть спиок контактов, отсортированных по заданной колонке контактов
"""
#Получить контакты, сортированные по колонке
def get_sorted_contacts(data, by):
	pass